//
// OrderPreestimateShipping.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OrderPreestimateShipping: Codable, JSONEncodable, Hashable {

    public var methodCode: String?
    public var methodName: String?
    public var carrierCode: String?
    public var carrierName: String?
    public var description: String?
    public var price: Double?
    public var priceIncTax: Double?
    public var deliveryTime: String?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(methodCode: String? = nil, methodName: String? = nil, carrierCode: String? = nil, carrierName: String? = nil, description: String? = nil, price: Double? = nil, priceIncTax: Double? = nil, deliveryTime: String? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.methodCode = methodCode
        self.methodName = methodName
        self.carrierCode = carrierCode
        self.carrierName = carrierName
        self.description = description
        self.price = price
        self.priceIncTax = priceIncTax
        self.deliveryTime = deliveryTime
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case methodCode = "method_code"
        case methodName = "method_name"
        case carrierCode = "carrier_code"
        case carrierName = "carrier_name"
        case description
        case price
        case priceIncTax = "price_inc_tax"
        case deliveryTime = "delivery_time"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(methodCode, forKey: .methodCode)
        try container.encodeIfPresent(methodName, forKey: .methodName)
        try container.encodeIfPresent(carrierCode, forKey: .carrierCode)
        try container.encodeIfPresent(carrierName, forKey: .carrierName)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(priceIncTax, forKey: .priceIncTax)
        try container.encodeIfPresent(deliveryTime, forKey: .deliveryTime)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}

