//
// Script.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Script: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var name: String?
    public var description: String?
    public var src: String?
    public var scope: String?
    public var event: String?
    public var loadMethod: String?
    public var html: String?
    public var createdTime: A2CDateTime?
    public var modifiedTime: A2CDateTime?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, name: String? = nil, description: String? = nil, src: String? = nil, scope: String? = nil, event: String? = nil, loadMethod: String? = nil, html: String? = nil, createdTime: A2CDateTime? = nil, modifiedTime: A2CDateTime? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.name = name
        self.description = description
        self.src = src
        self.scope = scope
        self.event = event
        self.loadMethod = loadMethod
        self.html = html
        self.createdTime = createdTime
        self.modifiedTime = modifiedTime
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case src
        case scope
        case event
        case loadMethod = "load_method"
        case html
        case createdTime = "created_time"
        case modifiedTime = "modified_time"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(src, forKey: .src)
        try container.encodeIfPresent(scope, forKey: .scope)
        try container.encodeIfPresent(event, forKey: .event)
        try container.encodeIfPresent(loadMethod, forKey: .loadMethod)
        try container.encodeIfPresent(html, forKey: .html)
        try container.encodeIfPresent(createdTime, forKey: .createdTime)
        try container.encodeIfPresent(modifiedTime, forKey: .modifiedTime)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Script: Identifiable {}
