//
// ProductOption.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductOption: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var productOptionId: String?
    public var name: String?
    public var description: String?
    public var sortOrder: Int?
    public var type: String?
    public var _required: Bool?
    public var available: Bool?
    public var usedInCombination: Bool?
    public var optionItems: [ProductOptionItem]?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, productOptionId: String? = nil, name: String? = nil, description: String? = nil, sortOrder: Int? = nil, type: String? = nil, _required: Bool? = nil, available: Bool? = nil, usedInCombination: Bool? = nil, optionItems: [ProductOptionItem]? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.productOptionId = productOptionId
        self.name = name
        self.description = description
        self.sortOrder = sortOrder
        self.type = type
        self._required = _required
        self.available = available
        self.usedInCombination = usedInCombination
        self.optionItems = optionItems
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case productOptionId = "product_option_id"
        case name
        case description
        case sortOrder = "sort_order"
        case type
        case _required = "required"
        case available
        case usedInCombination = "used_in_combination"
        case optionItems = "option_items"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(productOptionId, forKey: .productOptionId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(sortOrder, forKey: .sortOrder)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(_required, forKey: ._required)
        try container.encodeIfPresent(available, forKey: .available)
        try container.encodeIfPresent(usedInCombination, forKey: .usedInCombination)
        try container.encodeIfPresent(optionItems, forKey: .optionItems)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ProductOption: Identifiable {}
