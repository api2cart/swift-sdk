//
// OrderShipmentAddBatchPayloadInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OrderShipmentAddBatchPayloadInner: Codable, JSONEncodable, Hashable {

    public static let itemsRule = ArrayRule(minItems: 1, maxItems: nil, uniqueItems: false)
    public var orderId: String
    public var storeId: String?
    public var warehouseId: String?
    public var carrierId: String?
    public var carrierName: String?
    public var trackingNumber: String
    public var trackingLink: String?
    public var shipmentProvider: String?
    public var items: [OrderShipmentAddBatchPayloadInnerItemsInner]?
    public var sendNotifications: Bool?

    public init(orderId: String, storeId: String? = nil, warehouseId: String? = nil, carrierId: String? = nil, carrierName: String? = nil, trackingNumber: String, trackingLink: String? = nil, shipmentProvider: String? = nil, items: [OrderShipmentAddBatchPayloadInnerItemsInner]? = nil, sendNotifications: Bool? = nil) {
        self.orderId = orderId
        self.storeId = storeId
        self.warehouseId = warehouseId
        self.carrierId = carrierId
        self.carrierName = carrierName
        self.trackingNumber = trackingNumber
        self.trackingLink = trackingLink
        self.shipmentProvider = shipmentProvider
        self.items = items
        self.sendNotifications = sendNotifications
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case orderId = "order_id"
        case storeId = "store_id"
        case warehouseId = "warehouse_id"
        case carrierId = "carrier_id"
        case carrierName = "carrier_name"
        case trackingNumber = "tracking_number"
        case trackingLink = "tracking_link"
        case shipmentProvider = "shipment_provider"
        case items
        case sendNotifications = "send_notifications"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(orderId, forKey: .orderId)
        try container.encodeIfPresent(storeId, forKey: .storeId)
        try container.encodeIfPresent(warehouseId, forKey: .warehouseId)
        try container.encodeIfPresent(carrierId, forKey: .carrierId)
        try container.encodeIfPresent(carrierName, forKey: .carrierName)
        try container.encode(trackingNumber, forKey: .trackingNumber)
        try container.encodeIfPresent(trackingLink, forKey: .trackingLink)
        try container.encodeIfPresent(shipmentProvider, forKey: .shipmentProvider)
        try container.encodeIfPresent(items, forKey: .items)
        try container.encodeIfPresent(sendNotifications, forKey: .sendNotifications)
    }
}

