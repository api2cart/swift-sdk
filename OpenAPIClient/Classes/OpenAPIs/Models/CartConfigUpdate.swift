//
// CartConfigUpdate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CartConfigUpdate: Codable, JSONEncodable, Hashable {

    /** This parameter is deprecated for this method. Please, use this parameter in method account.config.update */
    public var dbTablesPrefix: String?
    /** This parameter sets the list of params to the shopping cart. */
    public var customFields: AnyCodable?
    /** Store Id */
    public var storeId: String?
    /** This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store's firewall may block specific values. */
    public var userAgent: String?

    public init(dbTablesPrefix: String? = nil, customFields: AnyCodable? = nil, storeId: String? = nil, userAgent: String? = nil) {
        self.dbTablesPrefix = dbTablesPrefix
        self.customFields = customFields
        self.storeId = storeId
        self.userAgent = userAgent
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dbTablesPrefix = "db_tables_prefix"
        case customFields = "custom_fields"
        case storeId = "store_id"
        case userAgent = "user_agent"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(dbTablesPrefix, forKey: .dbTablesPrefix)
        try container.encodeIfPresent(customFields, forKey: .customFields)
        try container.encodeIfPresent(storeId, forKey: .storeId)
        try container.encodeIfPresent(userAgent, forKey: .userAgent)
    }
}

