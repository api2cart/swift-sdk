//
// BasketItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BasketItem: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var parentId: String?
    public var productId: String?
    public var variantId: String?
    public var sku: String?
    public var name: String?
    public var price: Double?
    public var tax: Double?
    public var quantity: Double?
    public var weightUnit: String?
    public var weight: Double?
    public var options: [BasketItemOption]?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, parentId: String? = nil, productId: String? = nil, variantId: String? = nil, sku: String? = nil, name: String? = nil, price: Double? = nil, tax: Double? = nil, quantity: Double? = nil, weightUnit: String? = nil, weight: Double? = nil, options: [BasketItemOption]? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.parentId = parentId
        self.productId = productId
        self.variantId = variantId
        self.sku = sku
        self.name = name
        self.price = price
        self.tax = tax
        self.quantity = quantity
        self.weightUnit = weightUnit
        self.weight = weight
        self.options = options
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case parentId = "parent_id"
        case productId = "product_id"
        case variantId = "variant_id"
        case sku
        case name
        case price
        case tax
        case quantity
        case weightUnit = "weight_unit"
        case weight
        case options
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(parentId, forKey: .parentId)
        try container.encodeIfPresent(productId, forKey: .productId)
        try container.encodeIfPresent(variantId, forKey: .variantId)
        try container.encodeIfPresent(sku, forKey: .sku)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(tax, forKey: .tax)
        try container.encodeIfPresent(quantity, forKey: .quantity)
        try container.encodeIfPresent(weightUnit, forKey: .weightUnit)
        try container.encodeIfPresent(weight, forKey: .weight)
        try container.encodeIfPresent(options, forKey: .options)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension BasketItem: Identifiable {}
