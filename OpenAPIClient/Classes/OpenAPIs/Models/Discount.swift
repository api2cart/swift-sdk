//
// Discount.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Discount: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var name: String?
    public var modifierType: String?
    public var value: Double?
    public var fromTime: String?
    public var toTime: String?
    public var customerGroupIds: String?
    public var sortOrder: Int?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, name: String? = nil, modifierType: String? = nil, value: Double? = nil, fromTime: String? = nil, toTime: String? = nil, customerGroupIds: String? = nil, sortOrder: Int? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.name = name
        self.modifierType = modifierType
        self.value = value
        self.fromTime = fromTime
        self.toTime = toTime
        self.customerGroupIds = customerGroupIds
        self.sortOrder = sortOrder
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case modifierType = "modifier_type"
        case value
        case fromTime = "from_time"
        case toTime = "to_time"
        case customerGroupIds = "customer_group_ids"
        case sortOrder = "sort_order"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(modifierType, forKey: .modifierType)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(fromTime, forKey: .fromTime)
        try container.encodeIfPresent(toTime, forKey: .toTime)
        try container.encodeIfPresent(customerGroupIds, forKey: .customerGroupIds)
        try container.encodeIfPresent(sortOrder, forKey: .sortOrder)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Discount: Identifiable {}
