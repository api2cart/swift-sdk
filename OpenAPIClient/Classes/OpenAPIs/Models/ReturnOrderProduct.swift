//
// ReturnOrderProduct.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReturnOrderProduct: Codable, JSONEncodable, Hashable {

    public var productId: String?
    public var orderProductId: String?
    public var sku: String?
    public var name: String?
    public var quantity: Int?
    public var reason: ReturnReason?
    public var action: ReturnAction?
    public var condition: String?
    public var customerComment: String?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(productId: String? = nil, orderProductId: String? = nil, sku: String? = nil, name: String? = nil, quantity: Int? = nil, reason: ReturnReason? = nil, action: ReturnAction? = nil, condition: String? = nil, customerComment: String? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.productId = productId
        self.orderProductId = orderProductId
        self.sku = sku
        self.name = name
        self.quantity = quantity
        self.reason = reason
        self.action = action
        self.condition = condition
        self.customerComment = customerComment
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case productId = "product_id"
        case orderProductId = "order_product_id"
        case sku
        case name
        case quantity
        case reason
        case action
        case condition
        case customerComment = "customer_comment"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(productId, forKey: .productId)
        try container.encodeIfPresent(orderProductId, forKey: .orderProductId)
        try container.encodeIfPresent(sku, forKey: .sku)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(quantity, forKey: .quantity)
        try container.encodeIfPresent(reason, forKey: .reason)
        try container.encodeIfPresent(action, forKey: .action)
        try container.encodeIfPresent(condition, forKey: .condition)
        try container.encodeIfPresent(customerComment, forKey: .customerComment)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}

