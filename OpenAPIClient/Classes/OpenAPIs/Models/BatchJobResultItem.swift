//
// BatchJobResultItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BatchJobResultItem: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var status: String?
    public var entityId: String?
    public var errors: [String]?
    public var warnings: [String]?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: Int? = nil, status: String? = nil, entityId: String? = nil, errors: [String]? = nil, warnings: [String]? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.status = status
        self.entityId = entityId
        self.errors = errors
        self.warnings = warnings
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case status
        case entityId = "entity_id"
        case errors
        case warnings
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(entityId, forKey: .entityId)
        try container.encodeIfPresent(errors, forKey: .errors)
        try container.encodeIfPresent(warnings, forKey: .warnings)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension BatchJobResultItem: Identifiable {}
