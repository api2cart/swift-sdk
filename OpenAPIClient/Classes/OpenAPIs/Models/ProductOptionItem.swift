//
// ProductOptionItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductOptionItem: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var productOptionItemId: String?
    public var name: String?
    public var sortOrder: Int?
    public var price: String?
    public var weight: String?
    public var quantity: Int?
    public var typePrice: String?
    public var sku: String?
    public var isDefault: Bool?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, productOptionItemId: String? = nil, name: String? = nil, sortOrder: Int? = nil, price: String? = nil, weight: String? = nil, quantity: Int? = nil, typePrice: String? = nil, sku: String? = nil, isDefault: Bool? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.productOptionItemId = productOptionItemId
        self.name = name
        self.sortOrder = sortOrder
        self.price = price
        self.weight = weight
        self.quantity = quantity
        self.typePrice = typePrice
        self.sku = sku
        self.isDefault = isDefault
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case productOptionItemId = "product_option_item_id"
        case name
        case sortOrder = "sort_order"
        case price
        case weight
        case quantity
        case typePrice = "type_price"
        case sku
        case isDefault = "is_default"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(productOptionItemId, forKey: .productOptionItemId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(sortOrder, forKey: .sortOrder)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(weight, forKey: .weight)
        try container.encodeIfPresent(quantity, forKey: .quantity)
        try container.encodeIfPresent(typePrice, forKey: .typePrice)
        try container.encodeIfPresent(sku, forKey: .sku)
        try container.encodeIfPresent(isDefault, forKey: .isDefault)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ProductOptionItem: Identifiable {}
