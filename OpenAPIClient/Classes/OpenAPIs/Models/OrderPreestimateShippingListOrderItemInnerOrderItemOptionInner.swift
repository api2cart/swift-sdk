//
// OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner: Codable, JSONEncodable, Hashable {

    /** Ordered Product Option Name. Where x is order item ID, y is order item option ID */
    public var orderItemOptionName: String?
    /** Product Option ID. Where x is order item ID, y is order item option ID */
    public var orderItemOptionId: String?
    /** Ordered product option value Where x is order item ID, y - order item option ID */
    public var orderItemOptionValue: String?
    /** Product option value ID, where x is order item ID, y - order item option ID */
    public var orderItemOptionValueId: String?
    /** Product option used in combinations flag, where x is order item ID, y - order item option ID */
    public var orderItemOptionUsedInCombinations: Bool?

    public init(orderItemOptionName: String? = nil, orderItemOptionId: String? = nil, orderItemOptionValue: String? = nil, orderItemOptionValueId: String? = nil, orderItemOptionUsedInCombinations: Bool? = nil) {
        self.orderItemOptionName = orderItemOptionName
        self.orderItemOptionId = orderItemOptionId
        self.orderItemOptionValue = orderItemOptionValue
        self.orderItemOptionValueId = orderItemOptionValueId
        self.orderItemOptionUsedInCombinations = orderItemOptionUsedInCombinations
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case orderItemOptionName = "order_item_option_name"
        case orderItemOptionId = "order_item_option_id"
        case orderItemOptionValue = "order_item_option_value"
        case orderItemOptionValueId = "order_item_option_value_id"
        case orderItemOptionUsedInCombinations = "order_item_option_used_in_combinations"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(orderItemOptionName, forKey: .orderItemOptionName)
        try container.encodeIfPresent(orderItemOptionId, forKey: .orderItemOptionId)
        try container.encodeIfPresent(orderItemOptionValue, forKey: .orderItemOptionValue)
        try container.encodeIfPresent(orderItemOptionValueId, forKey: .orderItemOptionValueId)
        try container.encodeIfPresent(orderItemOptionUsedInCombinations, forKey: .orderItemOptionUsedInCombinations)
    }
}

