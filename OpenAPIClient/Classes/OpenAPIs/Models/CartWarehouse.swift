//
// CartWarehouse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CartWarehouse: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var name: String?
    public var description: String?
    public var avail: Bool?
    public var address: CustomerAddress?
    public var carriersIds: [String]?
    public var storesIds: [String]?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, name: String? = nil, description: String? = nil, avail: Bool? = nil, address: CustomerAddress? = nil, carriersIds: [String]? = nil, storesIds: [String]? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.name = name
        self.description = description
        self.avail = avail
        self.address = address
        self.carriersIds = carriersIds
        self.storesIds = storesIds
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case avail
        case address
        case carriersIds = "carriers_ids"
        case storesIds = "stores_ids"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(avail, forKey: .avail)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(carriersIds, forKey: .carriersIds)
        try container.encodeIfPresent(storesIds, forKey: .storesIds)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension CartWarehouse: Identifiable {}
