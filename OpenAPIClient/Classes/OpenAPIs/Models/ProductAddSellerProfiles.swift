//
// ProductAddSellerProfiles.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** If the seller is subscribed to \&quot;Business Policies\&quot;, use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;seller_profiles[&lt;b&gt;shipping_profile_id&lt;/b&gt;] &#x3D; string&lt;/br&gt;seller_profiles[&lt;b&gt;payment_profile_id&lt;/b&gt;] &#x3D; string&lt;/br&gt;seller_profiles[&lt;b&gt;return_profile_id&lt;/b&gt;] &#x3D; string&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt; */
public struct ProductAddSellerProfiles: Codable, JSONEncodable, Hashable {

    public var shippingProfileId: String?
    public var paymentProfileId: String?
    public var returnProfileId: String?

    public init(shippingProfileId: String? = nil, paymentProfileId: String? = nil, returnProfileId: String? = nil) {
        self.shippingProfileId = shippingProfileId
        self.paymentProfileId = paymentProfileId
        self.returnProfileId = returnProfileId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case shippingProfileId = "shipping_profile_id"
        case paymentProfileId = "payment_profile_id"
        case returnProfileId = "return_profile_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(shippingProfileId, forKey: .shippingProfileId)
        try container.encodeIfPresent(paymentProfileId, forKey: .paymentProfileId)
        try container.encodeIfPresent(returnProfileId, forKey: .returnProfileId)
    }
}

