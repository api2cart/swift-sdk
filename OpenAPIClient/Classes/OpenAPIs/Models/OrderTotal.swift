//
// OrderTotal.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OrderTotal: Codable, JSONEncodable, Hashable {

    public var subtotalExTax: Double?
    public var wrappingExTax: Double?
    public var shippingExTax: Double?
    public var totalDiscount: Double?
    public var totalTax: Double?
    public var total: Double?
    public var totalPaid: Double?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(subtotalExTax: Double? = nil, wrappingExTax: Double? = nil, shippingExTax: Double? = nil, totalDiscount: Double? = nil, totalTax: Double? = nil, total: Double? = nil, totalPaid: Double? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.subtotalExTax = subtotalExTax
        self.wrappingExTax = wrappingExTax
        self.shippingExTax = shippingExTax
        self.totalDiscount = totalDiscount
        self.totalTax = totalTax
        self.total = total
        self.totalPaid = totalPaid
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case subtotalExTax = "subtotal_ex_tax"
        case wrappingExTax = "wrapping_ex_tax"
        case shippingExTax = "shipping_ex_tax"
        case totalDiscount = "total_discount"
        case totalTax = "total_tax"
        case total
        case totalPaid = "total_paid"
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(subtotalExTax, forKey: .subtotalExTax)
        try container.encodeIfPresent(wrappingExTax, forKey: .wrappingExTax)
        try container.encodeIfPresent(shippingExTax, forKey: .shippingExTax)
        try container.encodeIfPresent(totalDiscount, forKey: .totalDiscount)
        try container.encodeIfPresent(totalTax, forKey: .totalTax)
        try container.encodeIfPresent(total, forKey: .total)
        try container.encodeIfPresent(totalPaid, forKey: .totalPaid)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}

