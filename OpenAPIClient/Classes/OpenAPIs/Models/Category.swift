//
// Category.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Category: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var parentId: String?
    public var createdAt: A2CDateTime?
    public var modifiedAt: A2CDateTime?
    public var name: String?
    public var shortDescription: String?
    public var description: String?
    public var storesIds: [String]?
    public var keywords: String?
    public var metaDescription: String?
    public var metaTitle: String?
    public var avail: Bool?
    public var path: String?
    public var seoUrl: String?
    public var sortOrder: Int?
    public var images: [Image]?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, parentId: String? = nil, createdAt: A2CDateTime? = nil, modifiedAt: A2CDateTime? = nil, name: String? = nil, shortDescription: String? = nil, description: String? = nil, storesIds: [String]? = nil, keywords: String? = nil, metaDescription: String? = nil, metaTitle: String? = nil, avail: Bool? = nil, path: String? = nil, seoUrl: String? = nil, sortOrder: Int? = nil, images: [Image]? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.parentId = parentId
        self.createdAt = createdAt
        self.modifiedAt = modifiedAt
        self.name = name
        self.shortDescription = shortDescription
        self.description = description
        self.storesIds = storesIds
        self.keywords = keywords
        self.metaDescription = metaDescription
        self.metaTitle = metaTitle
        self.avail = avail
        self.path = path
        self.seoUrl = seoUrl
        self.sortOrder = sortOrder
        self.images = images
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case parentId = "parent_id"
        case createdAt = "created_at"
        case modifiedAt = "modified_at"
        case name
        case shortDescription = "short_description"
        case description
        case storesIds = "stores_ids"
        case keywords
        case metaDescription = "meta_description"
        case metaTitle = "meta_title"
        case avail
        case path
        case seoUrl = "seo_url"
        case sortOrder = "sort_order"
        case images
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(parentId, forKey: .parentId)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(modifiedAt, forKey: .modifiedAt)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(shortDescription, forKey: .shortDescription)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(storesIds, forKey: .storesIds)
        try container.encodeIfPresent(keywords, forKey: .keywords)
        try container.encodeIfPresent(metaDescription, forKey: .metaDescription)
        try container.encodeIfPresent(metaTitle, forKey: .metaTitle)
        try container.encodeIfPresent(avail, forKey: .avail)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(seoUrl, forKey: .seoUrl)
        try container.encodeIfPresent(sortOrder, forKey: .sortOrder)
        try container.encodeIfPresent(images, forKey: .images)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Category: Identifiable {}
