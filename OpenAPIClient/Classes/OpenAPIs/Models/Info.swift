//
// Info.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Info: Codable, JSONEncodable, Hashable {

    public var owner: String?
    public var country: String?
    public var state: String?
    public var stateCode: String?
    public var city: String?
    public var streetAddress: String?
    public var streetAddressLine2: String?
    public var zipCode: String?
    public var email: String?
    public var phone: String?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(owner: String? = nil, country: String? = nil, state: String? = nil, stateCode: String? = nil, city: String? = nil, streetAddress: String? = nil, streetAddressLine2: String? = nil, zipCode: String? = nil, email: String? = nil, phone: String? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.owner = owner
        self.country = country
        self.state = state
        self.stateCode = stateCode
        self.city = city
        self.streetAddress = streetAddress
        self.streetAddressLine2 = streetAddressLine2
        self.zipCode = zipCode
        self.email = email
        self.phone = phone
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case owner
        case country
        case state
        case stateCode = "state_code"
        case city
        case streetAddress = "street_address"
        case streetAddressLine2 = "street_address_line_2"
        case zipCode = "zip_code"
        case email
        case phone
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(owner, forKey: .owner)
        try container.encodeIfPresent(country, forKey: .country)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(stateCode, forKey: .stateCode)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encodeIfPresent(streetAddress, forKey: .streetAddress)
        try container.encodeIfPresent(streetAddressLine2, forKey: .streetAddressLine2)
        try container.encodeIfPresent(zipCode, forKey: .zipCode)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}

