//
// OrderShipmentUpdate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OrderShipmentUpdate: Codable, JSONEncodable, Hashable {

    /** Store Id */
    public var storeId: String?
    /** Shipment id indicates the number of delivery */
    public var shipmentId: String
    /** Defines the order that will be updated */
    public var orderId: String?
    /** Defines shipment's tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = \"https://api2cart.com/docs/#/cart/CartInfo\">cart.info</a > method */
    public var trackingNumbers: [OrderShipmentAddTrackingNumbersInner]?
    /** Allows rewrite tracking numbers */
    public var replace: Bool? = true
    /** Defines shipment's status */
    public var isShipped: Bool? = true
    /** Defines custom tracking link */
    public var trackingLink: String?
    /** Defines the date of delivery */
    public var deliveredAt: String?
    /** Defines company name that provide tracking of shipment */
    public var shipmentProvider: String?

    public init(storeId: String? = nil, shipmentId: String, orderId: String? = nil, trackingNumbers: [OrderShipmentAddTrackingNumbersInner]? = nil, replace: Bool? = true, isShipped: Bool? = true, trackingLink: String? = nil, deliveredAt: String? = nil, shipmentProvider: String? = nil) {
        self.storeId = storeId
        self.shipmentId = shipmentId
        self.orderId = orderId
        self.trackingNumbers = trackingNumbers
        self.replace = replace
        self.isShipped = isShipped
        self.trackingLink = trackingLink
        self.deliveredAt = deliveredAt
        self.shipmentProvider = shipmentProvider
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case storeId = "store_id"
        case shipmentId = "shipment_id"
        case orderId = "order_id"
        case trackingNumbers = "tracking_numbers"
        case replace
        case isShipped = "is_shipped"
        case trackingLink = "tracking_link"
        case deliveredAt = "delivered_at"
        case shipmentProvider = "shipment_provider"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(storeId, forKey: .storeId)
        try container.encode(shipmentId, forKey: .shipmentId)
        try container.encodeIfPresent(orderId, forKey: .orderId)
        try container.encodeIfPresent(trackingNumbers, forKey: .trackingNumbers)
        try container.encodeIfPresent(replace, forKey: .replace)
        try container.encodeIfPresent(isShipped, forKey: .isShipped)
        try container.encodeIfPresent(trackingLink, forKey: .trackingLink)
        try container.encodeIfPresent(deliveredAt, forKey: .deliveredAt)
        try container.encodeIfPresent(shipmentProvider, forKey: .shipmentProvider)
    }
}

