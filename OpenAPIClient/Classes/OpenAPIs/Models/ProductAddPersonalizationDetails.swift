//
// ProductAddPersonalizationDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Defines personalization settings for the listing. To enable personalization, is_personalizable must be set to true. When enabled, additional fields may be used to configure the personalization experience, including whether it is required (personalization_is_required), the maximum character limit (personalization_char_count_max), and buyer instructions (personalization_instructions). All related fields are only applicable if personalization is enabled. */
public struct ProductAddPersonalizationDetails: Codable, JSONEncodable, Hashable {

    public var isPersonalizable: Bool
    public var personalizationIsRequired: Bool?
    public var personalizationCharCountMax: Int?
    public var personalizationInstructions: String?

    public init(isPersonalizable: Bool, personalizationIsRequired: Bool? = nil, personalizationCharCountMax: Int? = nil, personalizationInstructions: String? = nil) {
        self.isPersonalizable = isPersonalizable
        self.personalizationIsRequired = personalizationIsRequired
        self.personalizationCharCountMax = personalizationCharCountMax
        self.personalizationInstructions = personalizationInstructions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case isPersonalizable = "is_personalizable"
        case personalizationIsRequired = "personalization_is_required"
        case personalizationCharCountMax = "personalization_char_count_max"
        case personalizationInstructions = "personalization_instructions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(isPersonalizable, forKey: .isPersonalizable)
        try container.encodeIfPresent(personalizationIsRequired, forKey: .personalizationIsRequired)
        try container.encodeIfPresent(personalizationCharCountMax, forKey: .personalizationCharCountMax)
        try container.encodeIfPresent(personalizationInstructions, forKey: .personalizationInstructions)
    }
}

